# $Id$

locale_name: English
locale_id: en

messages:
 ASN:LOOKUP:
  args: 1
  format: Looking up AS number for %s.
  descr: ~
 ASN:INVALID_ADDRESS:
  args: 1
  format: %s is an invalid IP address.
  descr: ~
 ASN:ANNOUNCE_BY:
  args: 2
  format: %s announced by AS %s.
  descr: ~
 ASN:NOT_ANNOUNCE:
  args: 1
  format: %s not announced.
  descr: ~
 ASN:LOOKUP_ERROR:
  args: 1
  format: Error looking up AS number for %s.
  descr: ~
 DNS:QUERY_EXPLICIT:
  args: 4
  format: Query %s for %s/%s/%s.
  descr: ~
 DNS:QUERY_RESOLVER:
  args: 3
  format: DNS query for %s/%s/%s.
  descr: ~
 DNS:RESOLVER_QUERY_TIMEOUT:
  args: 0
  format: DNS resolver timed out in query for %s/%s/%s.
  descr: ~
 DNS:QUERY_PARENT:
  args: 4
  format: Query parent of %s for %s/%s/%s.
  descr: ~
 DNS:QUERY_PARENT_NOCACHE:
  args: 4
  format: Query parent (wihtout cache) of %s for %s/%s/%s.
  descr: ~
 DNS:FIND_PARENT:
  args: 2
  format: Find parent of %s/%s.
  descr: ~
 DNS:NO_PARENT:
  args: 2
  format: Failed to find parent of %s/%s.
  descr: ~
 DNS:PARENT_OF:
  args: 3
  format: Found %s as parent of %s/%s.
  descr: ~
 DNS:EXPLICIT_RESPONSE:
  args: 1
  format: DNS server response: %s
  descr: ~
 DNS:RESOLVER_RESPONSE:
  args: 1
  format: DNS resolver response: %s
  descr: ~
 DNS:NO_PARENT_NS:
  args: 3
  format: Failed to find nameservers for %s (parent of %s/%s). 
  descr: ~
 DNS:QUERY_TIMEOUT:
  args: 3
  format: DNS server %s timed out in query for %s/%s/%s.
  descr: ~
 DNS:QUERY_CHILD:
  args: 4
  format: Query any nameeserver of %s for %s/%s/%s.
  descr: ~
 DNS:QUERY_CHILD_NOCACHE:
  args: 4
  format: Query any nameeserver (withoutcache) of %s for %s/%s/%s.
  descr: ~
 DNS:NO_CHILD_NS:
  args: 2
  format: Failed to find namesevers of %s/%s.
  descr: ~
 DNS:ADDRESS_BLACKLIST_ADD:
  args: 1
  format: Adding DNS server %s to blacklist.
  descr: ~
 DNS:ADDRESS_BLACKLISTED:
  args: 1
  format: DNS server %s blacklisted.
  descr: ~
 DNS:LOOKUP_ERROR:
  args: 1
  format: DNS lookup error (%s).
  descr: ~
 DNS:NO_EDNS:
  args: 1
  format: EDNS not supported by %s.
  descr: ~
 DNS:NO_ANSWER:
  args: 0
  format: No answer received from %s.
  descr: ~
 DNS:NOT_AUTH:
  args: 4
  format: DNS server %s not authoritative for %s/%s/%s.
  descr: ~
 DNS:ANSWER_DUMP:
  args: 1
  format: DNS query returned: %s
  descr: ~
 DNS:SETUP_RESOLVER:
  args: 0
  format: DNS resolver set up.
  descr: ~
 DNS:SET_BUFSIZE:
  args: 1
  format: DNS resolver EDNS buffer size set to %s.
  descr: ~
 DNS:TRANSPORT_TCP:
  args: 0
  format: DNS resolver transport set to TCP.
  descr: ~
 DNS:TRANSPORT_UDP:
  args: 0
  format: DNS resolver transport set to UDP.
  descr: ~
 DNS:RECURSION_DESIRED:
  args: 0
  format: DNS resolver recursion desired.
  descr: ~
 DNS:RECURSION_DISABLED:
  args: 0
  format: DNS resolver recursion disabled.
  descr: ~
 DNS:DNSSEC_DESIRED:
  args: 0
  format: DNS resolver DNSSEC desired.
  descr: ~
 DNS:DNSSEC_DISABLED:
  args: 0
  format: DNS resolver DNSSEC disabled.
  descr: ~
 DNS:GET_NS_AT_PARENT:
  args: 2
  format: DNS query for NS of %s/%s at parent.
  descr: ~
 DNS:GET_NS_AT_CHILD:
  args: 2
  format: DNS query for NS of %s/%s at child.
  descr: ~
 DNS:INITIALIZING_NAMESERVERS:
  args: 2
  format: Initializing nameservers for %s/%s.
  descr: ~
 DNS:NAMESERVERS_INITIALIZED:
  args: 2
  format: Nameservers for %s/%s initialized.
  descr: ~
 DNS:NAMESERVER_FOUND:
  args: 4
  format: Found nameserver for %s/%s: %s (%s)
  descr: ~
 DNS:FIND_PARENT_BEGIN:
  args: 2
  format: Trying to find parent of %s/%s
  descr: ~
 DNS:FIND_PARENT_DOMAIN:
  args: 1
  format: Using %s as a start for parent trace.
  descr: ~
 DNS:FIND_PARENT_TRY:
  args: 1
  format: Checking %s as parent domain.
  descr: ~
 DNS:FIND_PARENT_UPPER:
  args: 1
  format: Parent might be %s.
  descr: ~
 DNS:FIND_PARENT_RESULT:
  args: 3
  format: Resolved %s as parent of %s/%s.
  descr: ~
 DNS:FIND_MX_BEGIN:
  args: 1
  format: Lookup up mail exchanger for %s
  descr: ~
 DNS:FIND_MX_RESULT:
  args: 2
  format: Found mail exchanger for %s: %s
  descr: ~ 
 DNS:FIND_ADDRESSES:
  args: 2
  format: Found addresses of %s/%s
  descr: ~ 
 DNS:FIND_ADDRESSES_RESULT:
  args: 3
  format: Addresses for %s/%s: %s
  descr: ~
 ADDRESS:BEGIN:
  args: 1
  format: Begin testing address %s.
  descr: ~
 ADDRESS:INVALID:
  args: 1
  format: Adress %s is not valid.
  descr: ~
 ADDRESS:PRIVATE_IPV4:
  args: 1
  format: %s is a private IPv4 address.
  descr: ~
 ADDRESS:RESERVED_IPV4:
  args: 1
  format: %s is a reserved IPv4 address.
  descr: ~
 ADDRESS:RESERVED_IPV6:
  args: 1
  format: %s is a reserved IPv6 address.
  descr: ~
 ADDRESS:PTR_NOT_FOUND:
  args: 2
  format: Could not find reverse address for %s (%s).
  descr: ~
 ADDRESS:PTR_HOSTNAME_NOT_FOUND:
  args: 2
  format: Reverse for %s points to an unknown hostname (%s).
  descr: ~
 ADDRESS:END:
  args: 1
  format: Done testing address %s.
  descr: ~
 CONNECTIVITY:BEGIN:
  args: 1
  format: Begin testing connectivity for %s.
  descr: ~
 CONNECTIVITY:MULTIPLE_ASN:
  args: 1
  format: Nameserver %s announce by multiple AS.
  descr: ~
 CONNECTIVITY:NOT_ANNOUNCED:
  args: 1
  format: Nameserver %s not announced by any AS.
  descr: ~
 CONNECTIVITY:ASN_LIST:
  args: 1
  format: Zone announced by ASN: %s 
  descr: ~
 CONNECTIVITY:TOO_FEW_ASN:
  args: 1
  format: Zone announced by too few ASN (%s).
  descr: ~
 CONNECTIVITY:ASN_COUNT_OK:
  args: 1
  format: Zone announced by more than one ASN (%s).
  descr: ~
 CONNECTIVITY:END:
  args: 1
  format: Done testing connectivity for %s.
  descr: ~
 DELEGATION:BEGIN:
  args: 1
  format: Begin testing delegation for %s.
  descr: ~
 DELEGATION:NS_AT_PARENT:
  args: 1
  format: Nameservers listed at parent: %s
  descr: ~
 DELEGATION:NOT_FOUND_AT_PARENT:
  args: 0
  format: Delegation not found at parent.
  descr: ~
 DELEGATION:NS_AT_CHILD:
  args: 1
  format: Nameservers listed at child: %s
  descr: ~
 DELEGATION:NOT_FOUND_AT_CHILD:
  args: 0
  format: No nameservers found at child.
  descr: ~
 DELEGATION:EXTRA_NS_PARENT:
  args: 1
  format: Superfluous nameserver listed at parent: %s
  descr: ~
 DELEGATION:EXTRA_NS_CHILD:
  args: 1
  format: Additional nameserver listed at child: %s
  descr: ~
 DELEGATION:TOO_FEW_NS:
  args: 1
  format: Too new nameservers (%s).
  descr: ~
 DELEGATION:MATCHING_GLUE:
  args: 2
  format: Checking glue for %s (%s).
  descr: ~
 DELEGATION:GLUE_FOUND_AT_CHILD:
  args: 2
  format: Child glue for %s found: %s
  descr:
 DELEGATION:INCONSISTENT_GLUE:
  args: 1
  format: Inconsistent glue for nameserver %s.
  descr: ~
 DELEGATION:GLUE_MISSING_AT_CHILD:
  args: 1
  format: Missing glue at child: %s
  descr: ~
 DELEGATION:END:
  args: 1
  format: Done testing delegation for %s.
  descr: ~
 DNSSEC:BEGIN:
  args: 1
  format: Begin testing DNSSEC for %s.
  descr: ~
 DNSSEC:CHECKING_DS_AT_PARENT:
  args: 1
  format: Checking DS records for %s at parent.
  descr: ~
 DNSSEC:DS_FOUND:
  args: 1
  format: Found DS record for %s at parent.
  descr: ~
 DNSSEC:NO_DS_FOUND:
  args: 1
  format: Did not find DS record for %s at parent.
  descr: ~
 DNSSEC:CHECKING_DNSKEY_AT_CHILD:
  args: 1
  format: Dhecking DNSKEY records for %s at child.
  descr: ~
 DNSSEC:DNSKEY_FOUND:
  args: 1
  format: Found DNSKEY record for %s at child.
  descr: ~
 DNSSEC:DNSKEY_NOT_FOUND:
  args: 1
  format: Did not find DNSKEY record for %s at child.
  descr: ~
 DNSSEC:DETERMINE_SECURITY_STATUS:
  args: 1
  format: Determining security status for %s.
  descr: ~
 DNSSEC:INCONSISTENT_SECURITY:
  args: 1
  format: Inconsistent security for %s - DS found at parent, but no DNSKEY found at child.
  descr: ~
 DNSSEC:CONSISTENT_SECURITY:
  args: 1
  format: Consistent security for %s - DS found at parent and DNSKEY found at child.
  descr: ~
 DNSSEC:SKIPPED_NO_KEYS:
  args: 1
  format: No DNSKEY(s) found at child, skipping other tests.
  descr: ~
 DNSSEC:MISSING_DS:
  args: 1
  format: Chain of trust broken for %s - DNSKEY found at child, but no DS was found at parent.
  descr: ~
 DNSSEC:CHECKING_CHILD:
  args: 1
  format: Checking DNSSEC at child (%s).
  descr: ~
 DNSSEC:DNSKEY_ALGORITHM_NOT_RECOMMENDED:
  args: 3
  format: DNSKEY %s (tag %s) is using a not recommended algorithm: %s
  descr: ~
 DNSSEC:DNSKEY_SKIP_PROTOCOL:
  args: 3
  format: DNSKEY %s (tag %s) is not a DNSSEC key (protocol=%s).
  descr: ~
 DNSSEC:DNSKEY_SKIP_TYPE:
  args: 2
  format: DNSKEY %s (tag %s) is not a zone key.
  descr: ~
 DNSSEC:DNSKEY_SEP:
  args: 2
  format: DNSKEY %s (tag %s) is marked as a secure entry point (SEP).
  descr: ~
 DNSSEC:DNSKEY_MANDATORY_FOUND:
  args: 1
  format: At least one manadatory algorithm found for DNSKEY %s.
  descr: ~
 DNSSEC:DNSKEY_MANDATORY_NOT_FOUND:
  args: 1
  format: No manadatory algorithm found for DNSKEY %s.
  descr: ~
 DNSSEC:ADDITIONAL_PROCESSING_BROKEN:
  args: 1
  format: DNSSEC additional processing broken for %s.
  descr: ~
 DNSSEC:NO_SIGNATURES:
  args: 1
  format: No signatures found for %s.
  descr: ~
 DNSSEC:CHILD_CHECK_ABORTED:
  args: 1
  format: DNSSEC child checks aborted for %s.
  descr: ~
 DNSSEC:DNSKEY_SIGNATURE_OK:
  args: 2
  format: Found RRSIG(DNSKEY %s) created by published key (tag %s).
  descr: ~
 DNSSEC:DNSKEY_SIGNER_UNPUBLISHED:
  args: 2
  format: Found RRSIG(DNSKEY %s) created by unpublished key (tag %s).
  descr: ~
 DNSSEC:DNSKEY_VALID_SIGNATURES:
  args: 1
  format: Enough valid signatures found for %s.
  descr: ~
 DNSSEC:DNSKEY_NO_VALID_SIGNATURES:
  args: 1
  format: Not enough valid signatures found for %s.
  descr: ~
 DNSSEC:SOA_SIGNATURE_OK:
  args: 2
  format: RRSIG(SOA %s) created by DNSKEY (tag %s) OK.
  descr: ~
 DNSSEC:SOA_SIGNATURE_UNPUBLISHED:
  args: 2
  format: Found RRSIG(SOA %s) created by published key (tag %s).
  descr: ~
 DNSSEC:SOA_VALID_SIGNATURES:
  args: 1
  format: Enough valid signatures over SOA RRset found for %s.
  descr: ~
 DNSSEC:SOA_NO_VALID_SIGNATURES:
  args: 1
  format: Not enough valid signatures over SOA RRset for %s.
  descr: ~
 DNSSEC:CHILD_CHECKED:
  args: 1
  format: DNSSEC child checks for %s complete.
  descr: ~
 DNSSEC:CHECKING_PARENT:
  args: 1
  format: Checking DNSSEC at parent of %s.
  descr: ~
 DNSSEC:PARENT_DS:
  args: 2
  format: Found DS(%s) at parent: %s
  descr: ~
 DNSSEC:DS_KEYREF_OK:
  args: 2
  format: Parent DS(%s) refers to valid key at child: %s
  descr: ~
 DNSSEC:DS_KEYREF_INVALID:
  args: 2
  format: Parent DS(%s) refers to invalid key at child: %s
  descr: ~
 DNSSEC:DS_TO_SEP:
  args: 2
  format: Parent DS(%s) refers to secure entry point at child: %s
  descr: ~
 DNSSEC:DS_TO_NONSEP:
  args: 2
  format: Parent DS(%s) does not refer to secure entry point at child: %s
  descr: ~
 DNSSEC:DS_MANDATORY_FOUND:
  args: 1
  format: At least one mandatory DS algorithm found for %s.
  descr: ~
 DNSSEC:DS_MANDATORY_NOT_FOUND:
  args: 1
  format: No mandatory DS algorithm found for %s.
  descr: ~
 DNSSEC:PARENT_CHECKED:
  args: 1
  format: DNSSEC parent checks for %s complete.
  descr: ~
 DNSSEC:RRSIG_NOT_YET_VALID:
  args: 1
  format: DNSSEC signature not yet valid: %s
  descr: ~
 DNSSEC:RRSIG_EXPIRED:
  args: 1
  format: DNSSEC signature expired: %s
  descr: ~
 DNSSEC:RRSIG_VALID:
  args: 1
  format: DNSSEC signature valid: %s
  descr: ~
 DNSSEC:END:
  args: 1
  format: Done testing DNSSEC for %s.
  descr: ~
 HOST:BEGIN:
  args: 1
  format: Begin testing host %s.
  descr: ~
 HOST:ILLEGAL_NAME:
  args: 2
  format: Hostname %s is illegal (syntax error at %s)
  descr: ~
 HOST:NOT_FOUND:
  args: 1
  format: No address found for %s.
  descr: ~
 HOST:CNAME_FOUND:
  args: 1
  format: Hostname %s refers to a CNAME.
  descr: ~
 HOST:END:
  args: 1
  format: Done testing host %s.
  descr: ~
 MAIL:BEGIN:
  args: 1
  format: Begin testing email address %s.
  descr: ~
 MAIL:ADDRESS_SYNTAX:
  args: 1
  format: %s in not a valid email address.
  descr: ~
 MAIL:MAIL_EXCHANGER:
  args: 2
  format: Mail exchangers for %s found %s.
  descr: ~
 MAIL:DOMAIN_NOT_FOUND:
  args: 1
  format: No mail exchanger found for domain %s.
  descr: ~
 MAIL:HOST_ERROR:
  args: 1
  format: Invalid hostname for mail exchanger %s.
  descr: ~
 MAIL:IPV6_ONLY:
  args: 1
  format: Mail exchanger %s is reachable by IPv6 only.
  descr: ~
 MAIL:END:
  args: 1
  format: Done testing email address %s.
  descr: ~
 NAMESERVER:BEGIN:
  args: 1
  format: Begin testing nameserver %s.
  descr: ~
 NAMESERVER:HOST_ERROR:
  args: 1
  format: Hostname error for %s.
  descr: ~
 NAMESERVER:CHECKING_RECURSION:
  args: 2
  format: Checking recursion for %s at address %s.
  descr: ~
 NAMESERVER:RECURSIVE:
  args: 2
  format: Nameserver %s (%s) is recursive.
  descr: ~
 NAMESERVER:NOT_RECURSIVE:
  args: 2
  format: Nameserver %s (%s) is not recursive.
  descr: ~
 NAMESERVER:CHECKING_AUTH:
  args: 2
  format: Checking authority for %s (%s).
  descr: ~
 NAMESERVER:NOT_AUTH:
  args: 3
  format: Nameserver %s (%s) not authoritative for %s.
  descr: ~
 NAMESERVER:AUTH:
  args: 3
  format: Nameserver %s (%s) authoritative for %s.
  descr: ~
 NAMESERVER:TESTING_UDP:
  args: 2
  format: Testing UDP queries to nameserver %s at addrress %s.
  descr: ~
 NAMESERVER:UDP_OK:
  args: 3
  format: Nameserver %s (%s) answers queries over UDP.
  descr: ~
 NAMESERVER:NO_UDP:
  args: 3
  format: Nameserver %s (%s) does not answer queries over UDP.
  descr: ~
 NAMESERVER:TESTING_TCP:
  args: 2
  format: Testing TCP queries to nameserver %s at addrress %s.
  descr: ~
 NAMESERVER:TCP_OK:
  args: 3
  format: Nameserver %s (%s) answers queries over TCP.
  descr: ~
 NAMESERVER:NO_TCP:
  args: 3
  format: Nameserver %s (%s) does not answer queries over TCP.
  descr: ~
 NAMESERVER:TESTING_AXFR:
  args: 2
  format: Testing zone transfer for nameserver %s (%s).
  descr: ~
 NAMESERVER:AXFR_OPEN:
  args: 3
  format: Nameserver %s (%s) open for zone transfer of %s.
  descr: ~
 NAMESERVER:AXFR_CLOSED:
  args: 3
  format: Nameserver %s (%s) closed for zone transfer of %s.
  descr: ~
 NAMESERVER:CHECKING_LEGACY_ID:
  args: 2
  format: Checking for legacy name server ID of %s (%s).
  descr: ~
 NAMESERVER:LEGACY_ID:
  args: 4
  format: Legacy name server ID for %s (%s): %s = %s
  descr: ~
 NAMESERVER:CHECKING_NSID:
  args: 2
  format: Checking for name server ID of %s (%s).
  descr: ~
 NAMESERVER:NSID:
  args: 3
  format: Name server ID for %s (%s): %s
  descr: ~
 NAMESERVER:END:
  args: 1
  format: Done testing nameserver %s.
  descr: ~
 SERIAL:BEGIN:
  args: 1
  format: Begin testing serial numbers for %s.
  descr: ~
 SERIAL:SOA_AT_ADDRESS:
  args: 2
  format: SOA at address %s has serial %s.
  descr: ~
 SERIAL:DIFFERENT:
  args: 1
  format: %s different serials found.
  descr: ~
 SERIAL:CONSISTENT:
  args: 1
  format: All SOA records has consistent serial numbers.
  descr: ~
 SERIAL:END:
  args: 1
  format: Done testing serial numbers for %s.
  descr: ~
 SMTP:BEGIN:
  args: 2
  format: Begin testing mail server %s with %s.
  descr: ~
 SMTP:CONNECT_FAILED:
  args: 1
  format: Failed to connect to %s.
  descr: ~
 SMTP:BANNER:
  args: 1
  format: SMTP banner: %s
  descr: ~
 SMTP:HELLO_FAILED:
  args: 1
  format: SMTP HELO failed while talking to %s.
  descr: ~
 SMTP:MAIL_FROM:
  args: 1
  format: Using %s as SMTP from (MAIL_FROM).
  descr: ~
 SMTP:RAW:
  args: 1
  format: SMTP Response: %s
  descr: ~
 SMTP:MAIL_FROM_REJECTED:
  args: 1
  format: Host did not accept %s as SMTP destination.
  descr: ~
 SMTP:RCPT_TO:
  args: 1
  format: Using %s as SMTP recipient (RCPT_TO).
  descr: ~
 SMTP:RECIPIENT_REJECTED:
  args: 1
  format: Host did not accept %s as SMTP recipient.
  descr: ~
 SMTP:RSET:
  args: 0
  format: Sending SMTP reset (RSET).
  descr: ~
 SMTP:QUIT:
  args: 0
  format: Sending SMTP quit (QUIT).
  descr: ~
 SMTP:OK:
  args: 2
  format: SMTP testing of %s with %s succeeded without errors.
  descr: ~
 SMTP:END:
  args: 2
  format: Done testing mail server %s with %s.
  descr: ~
 SOA:BEGIN:
  args: 1
  format: Begin testing SOA parameters for %s.
  descr: ~
 SOA:NOT_FOUND:
  args: 1
  format: No SOA record found for %s.
  descr: ~
 SOA:FOUND:
  args: 1
  format: Found SOA record for %s.
  descr: ~
 SOA:MULTIPLE_SOA:
  args: 1
  format: Multiple SOA records found for %s.
  descr: ~
 SOA:MNAME_ERROR:
  args: 2
  format: Error while checking SOA MNAME for %s (%s).
  descr: ~
 SOA:MNAME_VALID:
  args: 2
  format: SOA MNAME for %s valid (%s).
  descr: ~
 SOA:NS_NOT_FOUND:
  args: 1
  format: No NS record(s) found for %s.
  descr: ~
 SOA:MNAME_STEALTH:
  args: 2
  format: SOA MNAME for %s (%s) not listed as NS.
  descr: ~
 SOA:MNAME_PUBLIC:
  args: 2
  format: SOA MNAME for %s (%s) listed as NS.
  descr: ~
 SOA:MNAME_NOT_AUTH:
  args: 2
  format: SOA MNAME for %s not authoritative for %s.
  descr: ~
 SOA:MNAME_IS_AUTH:
  args: 2
  format: SOA MNAME for %s authoritative for %s.
  descr: ~
 SOA:RNAME_UNDELIVERABLE:
  args: 3
  format: Failed to deliver email for SOA MNAME of %s (%s) using %s. 
  descr: ~
 SOA:RNAME_DELIVERABLE:
  args: 3
  format: Successfull attempt to deliver email for SOA MNAME of %s (%s) using %s. 
  descr: ~
 SOA:RNAME_SYNTAX:
  args: 2
  format: Invalid SOA RNAME syntax for %s: %s
  descr: ~
 SOA:TTL_SMALL:
  args: 3
  format: SOA TTL for %s too small (%s) - recommended >= %s.
  descr: ~
 SOA:TTL_OK:
  args: 3
  format: SOA TTL for %s OK (%s).
  descr: ~
 SOA:REFRESH_SMALL:
  args: 3
  format: SOA refresh for %s too small (%s) - recommended >= %s.
  descr: ~
 SOA:REFRESH_OK:
  args: 3
  format: SOA refresh for %s OK (%s).
  descr: ~
 SOA:RETRY_LOWER_REFRESH:
  args: 3
  format: SOA retry for %s lower that refresh (%s vs %s).
  descr: ~
 SOA:RETRY_SMALL:
  args: 3
  format: SOA retry for %s too small (%s) - recommended >= %s.
  descr: ~
 SOA:RETRY_OK:
  args: 3
  format: SOA retry for %s OK (%s).
  descr: ~
 SOA:EXPIRE_SMALL:
  args: 3
  format: SOA expire for %s too small (%s) - recommended >= %s.
  descr: ~
 SOA:EXPIRE_OK:
  args: 3
  format: SOA expire for %s OK (%s).
  descr: ~
 SOA:EXPIRE_VS_REFRESH:
  args: 1
  format: SOA expire for %s lower that refresh (%s vs %s).
  descr: ~
 SOA:MINIMUM_OK:
  args: 3
  format: SOA minimum for %s too small (%s) - recommended >= %s.
  descr: ~
 SOA:MINIMUM_OK:
  args: 3
  format: SOA minimum for %s OK (%s).
  descr: ~
 SOA:END:
  args: 1
  format: Done testing SOA parameters for %s.
  descr: ~
 ZONE:BEGIN:
  args: 1
  format: Begin testing zone %s.
  descr: ~
 ZONE:END:
  args: 1
  format: Begin testing zone %s.
  descr: ~
